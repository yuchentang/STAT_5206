pivot_longer(names(pop)[-1], names_to = "year", values_to = "pop")
pop$year <- as.numeric(pop$year)
fer_temp <- read_csv("fertility.csv")
fer_temp <- fer_temp %>%
dplyr::select(`Country Name`, `Country Code`)
asset <- asset %>%
filter(SUBJECT == "TOT") %>%
rename(`Country Code` = LOCATION) %>%
left_join(fer_temp) %>%
rename(country = `Country Name`, year = TIME, asset = Value) %>%
dplyr::select(country, year, asset)
sav <- sav %>%
rename(`Country Code` = LOCATION) %>%
left_join(fer_temp) %>%
rename(country = `Country Name`, year = TIME, sav = Value) %>%
dplyr::select(country, year, sav)
data_joined <- fer %>%
inner_join(gdp) %>%
inner_join(hou) %>%
inner_join(lab) %>%
inner_join(edu) %>%
inner_join(cpi) %>%
inner_join(unemp) %>%
inner_join(pop) %>%
inner_join(asset) %>%
inner_join(sav) %>%
left_join(ten) %>%
drop_na()
data <- data_joined %>%
mutate(gdp_per_log = log(gdp / pop), hou = hou/100, lab = lab/100, edu = edu/100, unemp = unemp/100, pop = log(pop), cpi = cpi/100, sav = sav / 100, asset = log(asset)) %>%
dplyr::select(-gdp, -year, -country)
data_joined
data
data_joined
full <- lm(fer ~ ., data = data_for_linear)
library(tidyverse)
library(readxl)
library(VIM)
library(imputeTS)
library(broom)
library(knitr)
library(olsrr)
library(MASS)
library(psych)
library(jtools)
library(boot)
fer <- read_csv("fertility.csv")
gdp <- read_excel("gdp.xls")
hou <- read_csv("house_price.csv")
lab <- read_csv("female_labor_force_participation.csv")
edu <- read_csv("school_enrollment_secondary.csv")
ten <- read_csv("house_tenure.csv")
cpi <- read_csv("cpi.csv")
unemp <- read_csv("unemployment.csv")
pop <- read_csv("population.csv")
asset <- read_csv("financial_asset.csv")
sav <- read_csv("household_saving.csv")
fer <- fer %>%
dplyr::select(-names(fer)[2:4]) %>%
rename(country = `Country Name`)
fer <- fer %>%
pivot_longer(names(fer)[-1], names_to = "year", values_to = "fer")
fer$year <- as.numeric(fer$year)
gdp <- gdp %>%
dplyr::select(-names(gdp)[2:4]) %>%
rename(country = `Country Name`)
gdp <- gdp %>%
pivot_longer(names(gdp)[-1], names_to = "year", values_to = "gdp")
gdp$year <- as.numeric(gdp$year)
hou <- hou %>%
dplyr::select(Country, Time, Value) %>%
filter(str_length(Time) == 4) %>%
rename(country = Country, year = Time, hou = Value) %>%
group_by(country, year) %>%
summarize(hou = mean(hou))
hou$year <- as.numeric(hou$year)
lab <- lab %>%
dplyr::select(-names(lab)[2:4]) %>%
rename(country = `Country Name`)
lab <- lab %>%
pivot_longer(names(lab)[-1], names_to = "year", values_to = "lab")
lab$year <- as.numeric(lab$year)
edu <- edu %>%
dplyr::select(-names(edu)[2:4]) %>%
rename(country = `Country Name`)
edu <- edu %>%
pivot_longer(names(edu)[-1], names_to = "year", values_to = "edu")
edu$year <- as.numeric(edu$year)
ten <- ten %>%
filter(Area == "Total" & `Type of housing unit` == "Total") %>%
rename(country = `Country or Area`, year = Year, tenure = Tenure, value = Value) %>%
dplyr::select(country, year, tenure, value) %>%
pivot_wider(names_from = tenure, values_from = value) %>%
mutate(ten = `Member of household owns the housing unit` / Total) %>%
dplyr::select(country, year, ten) %>%
drop_na()
# add some data manually, which comes from new and small dataset/websites
ten <- ten %>%
add_row(country = "United States", year = 2019, ten = 79475/124135) %>%
add_row(country = "United States", year = 2017, ten = 77567/121560) %>%
add_row(country = "United States", year = 2015, ten = 74299/118290) %>%
add_row(country = "United States", year = 2013, ten = 75650/115852) %>%
add_row(country = "United States", year = 2011, ten = 76053/114833)
ten <- ten %>%
group_by(country) %>%
summarize(ten = mean(ten))
cpi <- cpi %>%
dplyr::select(-names(cpi)[2:4]) %>%
rename(country = `Country Name`)
cpi <- cpi %>%
pivot_longer(names(cpi)[-1], names_to = "year", values_to = "cpi")
cpi$year <- as.numeric(cpi$year)
unemp <- unemp %>%
dplyr::select(-names(unemp)[2:4]) %>%
rename(country = `Country Name`)
unemp <- unemp %>%
pivot_longer(names(unemp)[-1], names_to = "year", values_to = "unemp")
unemp$year <- as.numeric(unemp$year)
pop <- pop %>%
dplyr::select(-names(pop)[2:4]) %>%
rename(country = `Country Name`)
pop <- pop %>%
pivot_longer(names(pop)[-1], names_to = "year", values_to = "pop")
pop$year <- as.numeric(pop$year)
fer_temp <- read_csv("fertility.csv")
fer_temp <- fer_temp %>%
dplyr::select(`Country Name`, `Country Code`)
asset <- asset %>%
filter(SUBJECT == "TOT") %>%
rename(`Country Code` = LOCATION) %>%
left_join(fer_temp) %>%
rename(country = `Country Name`, year = TIME, asset = Value) %>%
dplyr::select(country, year, asset)
sav <- sav %>%
rename(`Country Code` = LOCATION) %>%
left_join(fer_temp) %>%
rename(country = `Country Name`, year = TIME, sav = Value) %>%
dplyr::select(country, year, sav)
data_joined <- fer %>%
inner_join(gdp) %>%
inner_join(hou) %>%
inner_join(lab) %>%
inner_join(edu) %>%
inner_join(cpi) %>%
inner_join(unemp) %>%
inner_join(pop) %>%
inner_join(asset) %>%
inner_join(sav) %>%
left_join(ten) %>%
drop_na()
data <- data_joined %>%
mutate(gdp_per_log = log(gdp / pop), hou = hou/100, lab = lab/100, edu = edu/100, unemp = unemp/100, pop = log(pop), cpi = cpi/100, sav = sav / 100, asset = log(asset)) %>%
dplyr::select(-gdp)
data_for_linear <- data %>%
select(-country, -year)
data_for_linear <- data %>%
dplyr::select(-country, -year)
pairs.panels(data_for_linear)
full <- lm(fer ~ ., data = data_for_linear)
summary(full)
par(mfrow = c(2,2))
plot(final_model, pch = 23, bg = 'orange', cex = 1)
par(mfrow = c(2,2))
plot(full, pch = 23, bg = 'orange', cex = 1)
plot(full$fitted.values, full$residuals)
data
fixed = plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "within")
summary(fixed)
random = plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "random")
summary(random)
phtest(random, fixed)
phtest(fixed, random)
lm(y ~ hou + factor(country) - 1, data = data)
lm(fer ~ hou + factor(country) - 1, data = data)
summary(fixed)
summary(fixed)
library(gplots)
plotmeans(y ~ country, main="Heterogeineity across countries", data=Panel)
install.packages("gplots")
library(gplots)
plotmeans(y ~ country, main="Heterogeineity across countries", data=Panel)
plotmeans(y ~ country, main="Heterogeineity across countries", data=data)
plotmeans(yfer ~ country, main="Heterogeineity across countries", data=data)
plotmeans(fer ~ country, main="Heterogeineity across countries", data=data)
warnings()
plotmeans(fer ~ year, main="Heterogeineity across countries", data=data)
table(data)
table(data$year)
table(data$country)
class(fixed)
phtest(fixed, random)
set.seed(123)
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_temp)
return(lm.out$coefficients)
}
fixed$coefficients
boot.out = boot(data, get.coeffic, R = 1000)
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_temp)
return(plm.out$coefficients)
}
boot.out = boot(data, get.coeffic, R = 1000)
?boot.out
boot.out = boot(data, get.coeffic, R = 1000)
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_temp)
return(plm.out$coefficients)
}
boot.out = boot(data, get.coeffic, R = 1000)
?boot
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "within")
return(plm.out$coefficients)
}
boot.out = boot(data, get.coeffic, R = 1000)
boot.out
hou_coef <- boot.out$t[, 2]
hou_coef <- boot.out$t[, 2]
hist(hou_coef)
boot.ci(boot.out, index = 2, type = "perc", conf = 0.95)
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "within")
return(plm.out$coefficients)
}
boot.out = boot(data, get.coeffic, R = 1000)
boot.out = boot(data, get.coeffic, R = 1000)
hou_coef <- boot.out$t[, 1]
hou_coef
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "within")
return(plm.out$coefficients)
}
boot.out = boot(data, get.coeffic, R = 1000)
fixed
set.seed(123)
get.coeffic <- function(data, indices){
data_temp <- data[indices, ]
plm.out <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "within")
return(plm.out$coefficients)
}
boot.out = boot(data, get.coeffic, R = 1000)
boot.out = boot(data, get.coeffic, R = 1000)
hou_coef <- boot.out$t[, 1]
hou_coef
boot.out
boot.out$t
fixed
data
data %>% ggplot(aes(hou)) + geom_histogram()
data_poor <- data %>%
filter(gdp_per_log <= median(data$gdp_per_log))
data_rich <- data %>%
filter(gdp_per_log > median(data$gdp_per_log))
model_poor <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_poor, index = c("country", "year"), model = "within")
model_rich <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_rich, index = c("country", "year"), model = "within")
model_poor
model_rich
fixed
data_low_hou <- data %>%
filter(hou <= median(data$hou))
data_high_hou <- data %>%
filter(hou > median(data$hou))
data_low_hou <- data %>%
filter(hou <= median(data$hou))
data_high_hou <- data %>%
filter(hou > median(data$hou))
model_low_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_low_hou, index = c("country", "year"), model = "within")
model_high_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_high_hou, index = c("country", "year"), model = "within")
model_low_hou
model_high_hou
data_poor <- data %>%
filter(asset <= median(data$asset))
data_rich <- data %>%
filter(asset > median(data$asset))
model_poor <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_poor, index = c("country", "year"), model = "within")
model_rich <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_rich, index = c("country", "year"), model = "within")
model_poor
model_rich
export_summs(model_poor, model_rich, model.names = c("Less Asset", "More Asset"))
plot_summs(model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Less Asset", "More Asset"))
boot.ci(boot.out, index = 1, type = "perc", conf = 0.95)
fixed
fixed$coefficients
fixed$coefficients['hou']
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Less Asset", "More Asset"))
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset", "More Asset"))
export_summs(fixed, model_poor, model_rich, model.names = c("Full Data", "Less Asset", "More Asset"))
data_poor
data_rich
model_low_hou
model_high_hou
fixed$coefficients
hou
hou[hou$country == "United States"]
hou[hou$country == "United States", ]
ushou <- hou[hou$country == "United States", ]
ggplot(ushou, aes(year, hou)) + geom_line()
data_low_hou <- data %>%
filter(hou <= median(data$hou))
data_high_hou <- data %>%
filter(hou > median(data$hou))
model_low_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_low_hou, index = c("country", "year"), model = "within")
model_high_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_high_hou, index = c("country", "year"), model = "within")
data_low_hou <- data %>%
filter(hou <= median(data$hou))
data_high_hou <- data %>%
filter(hou > median(data$hou))
model_low_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_low_hou, index = c("country", "year"), model = "within")
model_high_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_high_hou, index = c("country", "year"), model = "within")
```{r, results = 'asis'}
model_high_hou
export_summs(fixed, model_low_hou, model_high_hou, model.names = c("Full Data", "Low Housing Price Group", "High Housing Price Group"))
export_summs(fixed, model_low_hou, model_high_hou, model.names = c("Full Data", "Low Housing Price Group", "High Housing Price Group"))
plot_summs(fixed, model_low_hou, model_high_hou, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset", "More Asset"))
data_poor <- data %>%
filter(asset <= median(data$asset))
data_rich <- data %>%
filter(asset > median(data$asset))
model_poor <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_poor, index = c("country", "year"), model = "within")
model_rich <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_rich, index = c("country", "year"), model = "within")
export_summs(fixed, model_poor, model_rich, model.names = c("Full Data", "Less Asset Group", "More Asset Group"))
hou
ggplot(hou, aes(year, hou)) + geom_line()
ggplot(hou, aes(year, hou, color = country)) + geom_line()
ggplot(hou, aes(year, hou, color = country)) + geom_point()
ggplot(hou, aes(year, hou, color = country)) + geom_point() + abline()
ggplot(hou, aes(year, hou, color = country)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
ggplot() + geom_point(hou, aes(year, hou, color = country)) + geom_smooth(method = "lm", se = FALSE)
ggplot(hou) + geom_point(aes(year, hou, color = country)) + geom_smooth(method = "lm", se = FALSE)
hou %>% ggplot() + geom_point(aes(year, hou, color = country)) + geom_smooth(method = "lm", se = FALSE)
hou %>% ggplot() + geom_point(aes(year, hou, color = country)) + geom_smooth(aes(year, hou), method = "lm", se = FALSE)
hou %>% ggplot() + geom_point(aes(year, hou, color = country)) + geom_smooth(aes(year, hou), method = "lm", se = FALSE, color = "black")
hou %>% ggplot() + geom_point(aes(year, hou, color = country)) + geom_smooth(aes(year, hou), method = "lm", se = FALSE, color = "black")
hou %>% ggplot() + geom_point(aes(year, hou, color = country)) + geom_smooth(aes(year, hou), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Housing Price Index")
fer %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility")
fer %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility") + legend(position = "none")
fer %>% ggplot() + geom_point(aes(year, fer)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility")
fer %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility") + theme(legend. position = "none")
fer %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility") + theme(legend.position = "none")
plot(data$hou, data$fer)
plot(data$hou, data$fer)
abline()
ggplot(data, aes(hou, fer)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
ggplot(data, aes(hou, fer)) + geom_point() + geom_smooth(method = "lm", se = FALSE) + labs(x = "Housing Price Index", y = "Fertility Rate")
ggplot(data, aes(hou, fer)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
fer %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility") + theme(legend.position = "none")
fer
fer[1:1000, ] %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility")
fer[1:5000, ] %>% ggplot() + geom_point(aes(year, fer, color = country)) + geom_smooth(aes(year, fer), method = "lm", se = FALSE, color = "black") + labs(x = "Year", y = "Fertility")
?plot_summs
??plot_summs
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset Group", "More Asset Group"), coefs = ""hou)
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset Group", "More Asset Group"), coefs = "hou")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(VIM)
library(imputeTS)
library(broom)
library(knitr)
library(olsrr)
library(MASS)
library(psych)
library(jtools)
library(boot)
library(plm)
fer <- read_csv("fertility.csv")
gdp <- read_excel("gdp.xls")
hou <- read_csv("house_price.csv")
lab <- read_csv("female_labor_force_participation.csv")
edu <- read_csv("school_enrollment_secondary.csv")
ten <- read_csv("house_tenure.csv")
cpi <- read_csv("cpi.csv")
unemp <- read_csv("unemployment.csv")
pop <- read_csv("population.csv")
asset <- read_csv("financial_asset.csv")
sav <- read_csv("household_saving.csv")
fer <- fer %>%
dplyr::select(-names(fer)[2:4]) %>%
rename(country = `Country Name`)
fer <- fer %>%
pivot_longer(names(fer)[-1], names_to = "year", values_to = "fer")
fer$year <- as.numeric(fer$year)
gdp <- gdp %>%
dplyr::select(-names(gdp)[2:4]) %>%
rename(country = `Country Name`)
gdp <- gdp %>%
pivot_longer(names(gdp)[-1], names_to = "year", values_to = "gdp")
gdp$year <- as.numeric(gdp$year)
hou <- hou %>%
dplyr::select(Country, Time, Value) %>%
filter(str_length(Time) == 4) %>%
rename(country = Country, year = Time, hou = Value) %>%
group_by(country, year) %>%
summarize(hou = mean(hou))
hou$year <- as.numeric(hou$year)
lab <- lab %>%
dplyr::select(-names(lab)[2:4]) %>%
rename(country = `Country Name`)
lab <- lab %>%
pivot_longer(names(lab)[-1], names_to = "year", values_to = "lab")
lab$year <- as.numeric(lab$year)
edu <- edu %>%
dplyr::select(-names(edu)[2:4]) %>%
rename(country = `Country Name`)
edu <- edu %>%
pivot_longer(names(edu)[-1], names_to = "year", values_to = "edu")
edu$year <- as.numeric(edu$year)
ten <- ten %>%
filter(Area == "Total" & `Type of housing unit` == "Total") %>%
rename(country = `Country or Area`, year = Year, tenure = Tenure, value = Value) %>%
dplyr::select(country, year, tenure, value) %>%
pivot_wider(names_from = tenure, values_from = value) %>%
mutate(ten = `Member of household owns the housing unit` / Total) %>%
dplyr::select(country, year, ten) %>%
drop_na()
# add some data manually, which comes from new and small dataset/websites
ten <- ten %>%
add_row(country = "United States", year = 2019, ten = 79475/124135) %>%
add_row(country = "United States", year = 2017, ten = 77567/121560) %>%
add_row(country = "United States", year = 2015, ten = 74299/118290) %>%
add_row(country = "United States", year = 2013, ten = 75650/115852) %>%
add_row(country = "United States", year = 2011, ten = 76053/114833)
ten <- ten %>%
group_by(country) %>%
summarize(ten = mean(ten))
cpi <- cpi %>%
dplyr::select(-names(cpi)[2:4]) %>%
rename(country = `Country Name`)
cpi <- cpi %>%
pivot_longer(names(cpi)[-1], names_to = "year", values_to = "cpi")
cpi$year <- as.numeric(cpi$year)
unemp <- unemp %>%
dplyr::select(-names(unemp)[2:4]) %>%
rename(country = `Country Name`)
unemp <- unemp %>%
pivot_longer(names(unemp)[-1], names_to = "year", values_to = "unemp")
unemp$year <- as.numeric(unemp$year)
pop <- pop %>%
dplyr::select(-names(pop)[2:4]) %>%
rename(country = `Country Name`)
pop <- pop %>%
pivot_longer(names(pop)[-1], names_to = "year", values_to = "pop")
pop$year <- as.numeric(pop$year)
fer_temp <- read_csv("fertility.csv")
fer_temp <- fer_temp %>%
dplyr::select(`Country Name`, `Country Code`)
asset <- asset %>%
filter(SUBJECT == "TOT") %>%
rename(`Country Code` = LOCATION) %>%
left_join(fer_temp) %>%
rename(country = `Country Name`, year = TIME, asset = Value) %>%
dplyr::select(country, year, asset)
sav <- sav %>%
rename(`Country Code` = LOCATION) %>%
left_join(fer_temp) %>%
rename(country = `Country Name`, year = TIME, sav = Value) %>%
dplyr::select(country, year, sav)
data_joined <- fer %>%
inner_join(gdp) %>%
inner_join(hou) %>%
inner_join(lab) %>%
inner_join(edu) %>%
inner_join(cpi) %>%
inner_join(unemp) %>%
inner_join(pop) %>%
inner_join(asset) %>%
inner_join(sav) %>%
left_join(ten) %>%
drop_na()
data <- data_joined %>%
mutate(gdp_per_log = log(gdp / pop), hou = hou/100, lab = lab/100, edu = edu/100, unemp = unemp/100, pop = log(pop), cpi = cpi/100, sav = sav / 100, asset = log(asset)) %>%
dplyr::select(-gdp)
data_for_linear <- data %>%
dplyr::select(-country, -year)
pairs.panels(data_for_linear)
full <- lm(fer ~ ., data = data_for_linear)
summary(full)
par(mfrow = c(2,2))
plot(full, pch = 23, bg = 'orange', cex = 1)
fixed = plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "within")
summary(fixed)
random = plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data, index = c("country", "year"), model = "random")
summary(random)
phtest(fixed, random)
data_low_hou <- data %>%
filter(hou <= median(data$hou))
data_high_hou <- data %>%
filter(hou > median(data$hou))
model_low_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_low_hou, index = c("country", "year"), model = "within")
model_high_hou <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_high_hou, index = c("country", "year"), model = "within")
export_summs(fixed, model_low_hou, model_high_hou, model.names = c("Full Data", "Low Housing Price Group", "High Housing Price Group"))
plot_summs(fixed, model_low_hou, model_high_hou, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Low Housing Price Group", "High Housing Price Group"))
data_poor <- data %>%
filter(asset <= median(data$asset))
data_rich <- data %>%
filter(asset > median(data$asset))
model_poor <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_poor, index = c("country", "year"), model = "within")
model_rich <- plm(fer ~ hou + lab + edu + cpi + unemp + pop + asset + sav + ten + gdp_per_log, data = data_rich, index = c("country", "year"), model = "within")
export_summs(fixed, model_poor, model_rich, model.names = c("Full Data", "Less Asset Group", "More Asset Group"))
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset Group", "More Asset Group"))
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset Group", "More Asset Group"), coefs = "hou")
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset Group", "More Asset Group"), coefs = "hou")
plot_summs(fixed, model_poor, model_rich, scale = TRUE, robust = TRUE, inner_ci_level = 0.9, model.names = c("Full Data", "Less Asset Group", "More Asset Group"), coefs = "hou")
tinytex::reinstall_tinytex()
